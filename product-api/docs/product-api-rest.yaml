openapi: 3.0.0
info:
  title: Product API v1.0
  description: REST API for a Product Management System
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: "Token"
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
paths:
  /v1/test-token:
    get:
      summary: Generate a demo token automatically
      tags:
        - Auth
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string

  /v1/token:
    post:
      summary: Generate token via email/password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              example:
                email: "demo@example.com"
                password: "demo1234"
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
        '401':
          description: Invalid credentials

  # --------------------
  # Product CRUD
  # --------------------
  /v1/products:
    get:
      summary: Get all products
      tags:
        - Product
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      tags:
        - Product
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                price:
                  type: number
                stock:
                type: integer
            example:
              name: "Chocolate Cake"
              price: 25.50
              stock: 10
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /v1/products/{id}:
    get:
      summary: Get a product by ID
      tags:
        - Product
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      summary: Update a product
      tags:
        - Product
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  stock:
                type: integer
            example:
              price: 12.50
              stock: 3
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      summary: Delete a product
      tags:
        - Product
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted
        '404':
          description: Product not found