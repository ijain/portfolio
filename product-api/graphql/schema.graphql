"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

"Account of a person who uses this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Product {
  id: ID!
  name: String!
  description: String
  price: Float!
  image: String
  stock: Int!
  created_at: String
  updated_at: String
}

type Query {
  products: [Product!]! @all(model: "App\\Models\\Product")
  product(id: ID! @eq): Product @find(model: "App\\Models\\Product")
}

type Mutation {
  createProduct(
    name: String!
    description: String
    price: Float!
    image: String
    stock: Int!
  ): Product @create(model: "App\\Models\\Product")

  updateProduct(
    id: ID! @eq
    name: String
    description: String
    price: Float
    image: String
    stock: Int
  ): Product @update(model: "App\\Models\\Product")

  deleteProduct(id: ID! @eq): Product @delete(model: "App\\Models\\Product")
}